const cron = require('node-cron');
const moment = require('moment-timezone');
const db = require('./db');
//const bot = require('./bot'); // –Ü–º–ø–æ—Ä—Ç—É—î–º–æ –µ–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
//console.log('–¢–∏–ø –∑–º—ñ–Ω–Ω–æ—ó bot:', typeof bot);
const TelegramBot = require('node-telegram-bot-api');
const token = '';
const bot = new TelegramBot(token, { polling: false });



function startScheduler() {
  cron.schedule('* * * * *', () => {
    const now = moment().utc(); // –ü–æ—Ç–æ—á–Ω–∏–π —á–∞—Å —É —Ñ–æ—Ä–º–∞—Ç—ñ UTC
    db.getAllReminders((reminders) => {
      console.log('–ü–æ—Ç–æ—á–Ω–∏–π —á–∞—Å:', now.format());
      console.log('–û—Ç—Ä–∏–º–∞–Ω—ñ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è:', reminders);

      reminders.forEach(reminder => {
        const reminderTime = moment(reminder.reminder_time).tz(reminder.timezone);
        const notifyTime = moment(reminder.notify_time).tz(reminder.timezone);

        console.log('–ß–∞—Å –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è:', reminderTime.format());
        console.log('–ß–∞—Å –¥–ª—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è:', notifyTime.format());

        if (now.isSameOrAfter(notifyTime) && now.isBefore(reminderTime)) {
          console.log('–ù–∞–¥—Å–∏–ª–∞—î–º–æ –Ω–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—É:', reminder.user_id);
          bot.sendMessage(reminder.user_id, üîî –ù–∞–≥–∞–¥—É–≤–∞–Ω–Ω—è: ${reminder.reminder_text});
        }
      });
    });
  });
}


module.exports = {
  startScheduler
};
